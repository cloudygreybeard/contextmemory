project_name: contextmemory

gomod:
  dir: ./cmd/cmctl

before:
  hooks:
    - bash -c "cd cmd/cmctl && go mod tidy"
    - bash -c "cd cmd/cmctl && go generate ./..."
    - make build.ui
    - make package.ui

builds:
  # Standard CLI builds for multiple platforms
  - id: cmctl
    dir: ./cmd/cmctl
    main: .
    binary: cmctl
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    ignore:
      - goos: windows
        goarch: arm64  # Windows ARM64 support limited
    ldflags:
      - -s -w
      - -X github.com/cloudygreybeard/contextmemory/cmd/cmctl/cmd.version={{.Version}}
      - -X github.com/cloudygreybeard/contextmemory/cmd/cmctl/cmd.commit={{.Commit}}
      - -X github.com/cloudygreybeard/contextmemory/cmd/cmctl/cmd.date={{.Date}}

  # WebAssembly build disabled due to SQLite incompatibility
  # See docs/WEBASSEMBLY_LIMITATION.md for details
  # - id: cmctl-wasm
  #   dir: ./cmd/cmctl
  #   main: .
  #   binary: cmctl
  #   env:
  #     - CGO_ENABLED=0
  #     - GOOS=js
  #     - GOARCH=wasm
  #   goos:
  #     - js
  #   goarch:
  #     - wasm
  #   ldflags:
  #     - -s -w
  #     - -X github.com/cloudygreybeard/contextmemory/cmd/cmctl/cmd.version={{.Version}}

archives:
  - id: standard
    builds:
      - cmctl
    format: tar.gz
    format_overrides:
      - goos: windows
        format: zip
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.md
      - LICENSE
      - CONTRIBUTING.md

  # WebAssembly archive disabled due to SQLite incompatibility
  # - id: wasm
  #   builds:
  #     - cmctl-wasm
  #   format: tar.gz
  #   name_template: >-
  #     {{ .ProjectName }}_
  #     {{- .Version }}_
  #     WebAssembly
  #   files:
  #     - README.md
  #     - LICENSE
  #     - ui/src/wasm/wasm_exec.js

checksum:
  name_template: 'checksums.txt'

snapshot:
  name_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^style:'
      - '^refactor:'
      - '^ci:'
  groups:
    - title: Features
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'Bug fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: 'Performance improvements'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: Others
      order: 999

brews:
  - name: cmctl
    ids:
      - standard
    homepage: https://github.com/cloudygreybeard/contextmemory
    description: "Session context management CLI for LLM development workflows"
    license: "Apache-2.0"
    
    tap:
      owner: cloudygreybeard
      name: homebrew-contextmemory
      token: "{{ .Env.HOMEBREW_TAP_GITHUB_TOKEN }}"
    
    folder: Formula
    commit_author:
      name: contextmemory-bot
      email: bot@contextmemory.dev
    commit_msg_template: "Brew formula update for {{ .ProjectName }} version {{ .Tag }}"
    
    dependencies:
      - name: git
    
    test: |
      system "#{bin}/cmctl", "--version"
    
    caveats: |
      To complete your ContextMemory setup, install the VS Code extension:
        cursor --install-extension cloudygreybeard.contextmemory
      
      Or download from VS Code Marketplace:
        https://marketplace.visualstudio.com/items?itemName=cloudygreybeard.contextmemory

release:
  github:
    owner: cloudygreybeard
    name: contextmemory
  draft: false
  prerelease: auto
  name_template: "{{.ProjectName}} v{{.Version}}"
  footer: |
    ## Installation
    
    ### Homebrew (macOS/Linux)
    ```bash
    brew tap cloudygreybeard/contextmemory
    brew install cmctl
    cursor --install-extension cloudygreybeard.contextmemory
    ```
    
    ### Direct Download
    Download the appropriate binary for your platform from the assets above.
    
    ### VS Code Extension
    Install from the [Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=cloudygreybeard.contextmemory) or download the `.vsix` file.

